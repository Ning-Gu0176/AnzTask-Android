<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PayPalPaymentViewController.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PayPalPaymentViewController</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PayPalPaymentViewController.h</DeclaredIn>
            
			
			<NodeRef refid="36"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PayPalPaymentViewController/initWithPayment:configuration:delegate:</TokenIdentifier>
			<Abstract type="html">The designated initalizer. A new view controller MUST be initialized for each use.</Abstract>
			<DeclaredIn>PayPalPaymentViewController.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithPayment:(PayPalPayment *)payment configuration:(PayPalConfiguration *)configuration delegate:(id&lt;PayPalPaymentDelegate&gt;)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>payment</Name>
					<Abstract type="html">The payment to be processed.</Abstract>
				</Parameter><Parameter>
					<Name>configuration</Name>
					<Abstract type="html">The configuration to be used for the lifetime of the controller
     (e.g., default email address or hideCreditCard); can be nil.</Abstract>
				</Parameter><Parameter>
					<Name>delegate</Name>
					<Abstract type="html">The delegate you want to receive updates about the payment.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithPayment:configuration:delegate:</Anchor>
            <NodeRef refid="36"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PayPalPaymentViewController/setPaymentDelegate:</TokenIdentifier>
			<Abstract type="html">Delegate access</Abstract>
			<DeclaredIn>PayPalPaymentViewController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak, readonly) id&lt;PayPalPaymentDelegate&gt; paymentDelegate</Declaration>
			
			
			<Anchor>//api/name/paymentDelegate</Anchor>
            <NodeRef refid="36"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PayPalPaymentViewController/paymentDelegate</TokenIdentifier>
			<Abstract type="html">Delegate access</Abstract>
			<DeclaredIn>PayPalPaymentViewController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak, readonly) id&lt;PayPalPaymentDelegate&gt; paymentDelegate</Declaration>
			
			
			<Anchor>//api/name/paymentDelegate</Anchor>
            <NodeRef refid="36"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PayPalPaymentViewController/paymentDelegate</TokenIdentifier>
			<Abstract type="html">Delegate access</Abstract>
			<DeclaredIn>PayPalPaymentViewController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak, readonly) id&lt;PayPalPaymentDelegate&gt; paymentDelegate</Declaration>
			
			
			<Anchor>//api/name/paymentDelegate</Anchor>
            <NodeRef refid="36"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PayPalPaymentViewController/setState:</TokenIdentifier>
			<Abstract type="html">- The state is initially set to PayPalPaymentViewControllerStateUnsent.
- When the user taps the final payment confirmation button, the state changes to
   PayPalPaymentViewControllerStateInProgress.
- If the payment goes through successfully, the state remains at
   PayPalPaymentViewControllerStateInProgress, and your app&apos;s
   payPalPaymentViewController:didCompletePayment: method is called.
- If the payment fails, the state changes back to PayPalPaymentViewControllerStateUnsent.
   (Also, an appropriate error message is displayed to the user).</Abstract>
			<DeclaredIn>PayPalPaymentViewController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) PayPalPaymentViewControllerState state</Declaration>
			
			
			<Anchor>//api/name/state</Anchor>
            <NodeRef refid="36"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PayPalPaymentViewController/state</TokenIdentifier>
			<Abstract type="html">- The state is initially set to PayPalPaymentViewControllerStateUnsent.
- When the user taps the final payment confirmation button, the state changes to
   PayPalPaymentViewControllerStateInProgress.
- If the payment goes through successfully, the state remains at
   PayPalPaymentViewControllerStateInProgress, and your app&apos;s
   payPalPaymentViewController:didCompletePayment: method is called.
- If the payment fails, the state changes back to PayPalPaymentViewControllerStateUnsent.
   (Also, an appropriate error message is displayed to the user).</Abstract>
			<DeclaredIn>PayPalPaymentViewController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) PayPalPaymentViewControllerState state</Declaration>
			
			
			<Anchor>//api/name/state</Anchor>
            <NodeRef refid="36"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PayPalPaymentViewController/state</TokenIdentifier>
			<Abstract type="html">- The state is initially set to PayPalPaymentViewControllerStateUnsent.
- When the user taps the final payment confirmation button, the state changes to
   PayPalPaymentViewControllerStateInProgress.
- If the payment goes through successfully, the state remains at
   PayPalPaymentViewControllerStateInProgress, and your app&apos;s
   payPalPaymentViewController:didCompletePayment: method is called.
- If the payment fails, the state changes back to PayPalPaymentViewControllerStateUnsent.
   (Also, an appropriate error message is displayed to the user).</Abstract>
			<DeclaredIn>PayPalPaymentViewController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) PayPalPaymentViewControllerState state</Declaration>
			
			
			<Anchor>//api/name/state</Anchor>
            <NodeRef refid="36"/>
		</Token>
		
        
        
	</File>
</Tokens>